{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,SAChCC,MAAEC,EAAKC,KAAEC,EAAIC,OAAEC,GAAWR,EAuB3B,SAAIS,EAAcC,EAAUP,GACTQ,KAAKC,Q,CAlB7BZ,EAAOa,iBAAiB,UAExB,SAA0BC,GACxBA,EAAMC,iBAENN,EAAcD,EAAOQ,M,IA8BXP,IACTQ,MAAK,EAACP,SAAEA,EAAUP,MAAAe,MACjBC,QAAQC,IAAI,uBAAqBV,QAAiBQ,MAAU,IAE7DG,OAAM,EAACX,SAAEA,EAAUP,MAAAmB,MAClBH,QAAQC,IAAI,sBAAoBV,QAAeY,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('form');\nconst { delay, step, amount } = formEl;\n// console.log(delay.value);\n// console.log(step.value);\n// console.log(amount.value);\n\n// const amount = document.querySelector('input[name=\"amount\"]');\nformEl.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n\n  createPromise(amount.value);\n}\n\n// Напиши скрипт, який на момент сабміту форми\n// викликає функцію createPromise(position, delay)\n// стільки разів, скільки ввели в поле amount.\n\n// Під час кожного виклику передай їй номер\n// промісу(position), що створюється, і затримку,\n//   враховуючи першу затримку(delay), введену користувачем,\n//   і крок(step).\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\n//   Доповни код функції createPromise таким чином,\n//   щоб вона повертала один проміс, який виконується\n//   або відхиляється через delay часу.Значенням промісу\n//   повинен бути об'єкт, в якому будуть властивості\n//   position і delay зі значеннями однойменних\n// параметрів.Використовуй початковий код функції для\n// вибору того, що потрібно зробити з промісом - виконати\n// або відхилити.\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","Math","random","addEventListener","event","preventDefault","value","then","delay1","console","log","catch","delay2"],"version":3,"file":"03-promises.62da2cb0.js.map"}